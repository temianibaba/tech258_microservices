---
apiVersion: apps/v1 # which api to use for deployment
kind: Deployment # pod - service what kind of service you wnat

metadata:
  name: mongo-deployment
spec:
  selector: #go into this
    matchLabels: # go into this
      app: mongo # look for this label to match with k8
      # Replica set of this with pods
  replicas: 2
  # template to use it's label for k8 service to launch in browser
  template:
    metadata: 
      labels:
        app: mongo
    
    spec:
      containers:
      - name: mongo
        image: muyisanibaba/mongo-db
        ports:
        - containerPort: 27017
---
# Select type of API and type of service
apiVersion: v1
kind: Service
# Meta data for name
metadata:
  name: mongo-svc
  namespace: default # sre
# Spec to include ports selector to connect to the deployment
spec:
  ports:
  - nodePort: 30001 # range is 30000-32768
    port: 27017
    targetPort: 27017

# Lets define the selector and label to connect to nginx deploy
  selector:
    app: mongo # this label connects service to deployment
  

  type: NodePort # there is clusterIP Node port and loadbalancer
---
apiVersion: apps/v1 # which api to use for deployment
kind: Deployment # pod - service what kind of service you wnat

metadata:
  name: node-app-deployment
spec:
  selector: #go into this
    matchLabels: # go into this
      app: nodeapp # look for this label to match with k8
      # Replica set of this with pods
  replicas: 2
  # template to use it's label for k8 service to launch in browser
  template:
    metadata: 
      labels:
        app: nodeapp
    
    spec:
      containers:
      - name: nodeapp
        image: muyisanibaba/nodejs-app
        ports:
        - containerPort: 3000
        env:
          - name: DB_HOST
            value: mongodb://10.104.66.172/posts
---
# Select type of API and type of service
apiVersion: v1
kind: Service
# Meta data for name
metadata:
  name: nodeapp-svc
  namespace: default # sre
# Spec to include ports selector to connect to the deployment
spec:
  ports:
  - nodePort: 30002 # range is 30000-32768
    port: 3000
    targetPort: 3000

# Lets define the selector and label to connect to nginx deploy
  selector:
    app: nodeapp # this label connects service to deployment
  

  type: NodePort # there is clusterIP Node port and loadbalancer
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: node-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: node-app-deployment
  minReplicas: 2
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 50
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mongo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mongo-deployment
  minReplicas: 2
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 50
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /mnt/data